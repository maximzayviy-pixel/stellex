// –ü—Ä–æ—Å—Ç–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–∏–±—Ä–∞—Ü–∏–∏
export const vibrate = (type: 'tap' | 'success' | 'error' | 'warning' | 'selection' = 'tap') => {
  console.log('üîä VIBRATE CALLED:', type)
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–∏–±—Ä–∞—Ü–∏–∏
  if (typeof window === 'undefined') {
    console.log('‚ùå Window is undefined (SSR)')
    return
  }

  if (!('vibrate' in navigator)) {
    console.log('‚ùå Vibration API not supported in this browser')
    return
  }

  // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –≤–∏–±—Ä–∞—Ü–∏–∏
  const patterns = {
    tap: 50,
    success: [100, 50, 100],
    error: [200, 100, 200],
    warning: [100, 50, 100, 50, 100],
    selection: 30
  }

  const pattern = patterns[type]
  console.log('üì≥ Vibration pattern:', pattern)

  try {
    // –ü—Ä–æ–±—É–µ–º –≤–∏–±—Ä–∞—Ü–∏—é
    const result = navigator.vibrate(pattern)
    console.log('‚úÖ Vibration result:', result)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if (result === false) {
      console.log('‚ùå Vibration was blocked by browser')
    } else {
      console.log('üéâ Vibration should be working!')
    }
  } catch (error) {
    console.error('‚ùå Vibration error:', error)
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–ø—É—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
export const initVibration = () => {
  console.log('üîß Vibration system initialized')
}

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–∏–±—Ä–∞—Ü–∏–∏ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
export const vibrationPatterns = {
  // –ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–∫–ª–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  tap: 'tap' as const,
  // –£—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  success: 'success' as const,
  // –û—à–∏–±–∫–∏
  error: 'error' as const,
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  notification: 'warning' as const,
  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞
  selection: 'selection' as const
}
